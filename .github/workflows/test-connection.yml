name: 🧪 Test VPS Connection

on:
  workflow_dispatch:

jobs:
  test-connection:
    name: 🔍 Test VPS Connection
    runs-on: ubuntu-latest
    
    steps:
    - name: ✅ Check VPS_PASSWORD Secret
      run: |
        echo "## 🔍 VPS Connection Test" >> $GITHUB_STEP_SUMMARY
        
        if [ -n "${{ secrets.VPS_PASSWORD }}" ]; then
          echo "- ✅ VPS_PASSWORD: Configured" >> $GITHUB_STEP_SUMMARY
          echo "✅ VPS_PASSWORD secret is configured"
        else
          echo "- ❌ VPS_PASSWORD: Missing" >> $GITHUB_STEP_SUMMARY
          echo "❌ VPS_PASSWORD secret is missing"
          echo "::error::VPS_PASSWORD secret is required"
          exit 1
        fi

    - name: 🔌 Test SSH Connection
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: 82.25.69.57
        username: root
        password: ${{ secrets.VPS_PASSWORD }}
        port: 22
        timeout: 30s
        script: |
          echo "🔌 Testing SSH connection to fuseloja.com.br VPS..."
          echo "📊 Server Info:"
          echo "- Hostname: $(hostname)"
          echo "- OS: $(cat /etc/os-release | grep PRETTY_NAME | cut -d= -f2 | tr -d '\"')"
          echo "- Uptime: $(uptime -p)"
          echo "- Disk Space: $(df -h / | tail -1 | awk '{print $4}') available"
          echo "- Memory: $(free -h | grep Mem | awk '{print $7}') available"
          
          echo ""
          echo "🔍 Checking required software..."
          
          if command -v node &> /dev/null; then
            echo "✅ Node.js: $(node --version)"
          else
            echo "⚠️ Node.js: Not installed"
          fi
          
          if command -v pm2 &> /dev/null; then
            echo "✅ PM2: $(pm2 --version)"
          else
            echo "⚠️ PM2: Not installed"
          fi
          
          if command -v psql &> /dev/null; then
            echo "✅ PostgreSQL: Available"
          else
            echo "⚠️ PostgreSQL: Not installed"
          fi
          
          echo ""
          echo "📂 Checking deployment directory..."
          if [ -d "/opt/fuseloja" ]; then
            echo "✅ /opt/fuseloja: Exists"
            if [ -d "/opt/fuseloja/current" ]; then
              echo "✅ Current deployment: Found"
            else
              echo "⚠️ Current deployment: Not found"
            fi
          else
            echo "⚠️ /opt/fuseloja: Not found"
          fi
          
          echo ""
          echo "🚀 VPS is ready for FuseLoja deployment!"

    - name: 📊 Generate Summary
      if: always()
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Connection Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Host**: 82.25.69.57" >> $GITHUB_STEP_SUMMARY
        echo "- **Username**: root" >> $GITHUB_STEP_SUMMARY
        echo "- **Domain**: fuseloja.com.br" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" == "success" ]; then
          echo "### ✅ Connection Test Passed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your VPS is ready for deployment. You can now:" >> $GITHUB_STEP_SUMMARY
          echo "1. Push code to main branch for automatic deploy" >> $GITHUB_STEP_SUMMARY
          echo "2. Run 'Deploy FuseLoja' workflow manually" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ❌ Connection Test Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check:" >> $GITHUB_STEP_SUMMARY
          echo "1. VPS_PASSWORD secret is correct" >> $GITHUB_STEP_SUMMARY
          echo "2. VPS is accessible: \`ssh root@82.25.69.57\`" >> $GITHUB_STEP_SUMMARY
          echo "3. Password authentication is enabled on VPS" >> $GITHUB_STEP_SUMMARY
        fi