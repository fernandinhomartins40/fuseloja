version: '3.8'

services:
  # Frontend development server
  frontend:
    build:
      context: ..
      dockerfile: Dockerfile.dev-frontend
    container_name: fuseloja-frontend-dev
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:3000
      - VITE_API_PREFIX=/api/v1
    volumes:
      - ../src:/app/src
      - ../public:/app/public
      - ../index.html:/app/index.html
      - ../vite.config.ts:/app/vite.config.ts
      - ../package.json:/app/package.json
      - /app/node_modules
    command: npm run dev
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - backend

  # Backend development server
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: fuseloja-backend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=/app/database/dev.db
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - JWT_REFRESH_SECRET=dev-refresh-secret-change-in-production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    volumes:
      - ./src:/app/src
      - ./uploads:/app/uploads
      - ./database:/app/database
      - ./logs:/app/logs
      - /app/node_modules
    command: npm run dev:ts
    restart: unless-stopped
    networks:
      - app-network

  # Optional: Add Redis for caching in production
  redis:
    image: redis:7-alpine
    container_name: reusable-backend-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - redis

  # Optional: Add monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: fuseloja-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: reusable-backend-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - backend-network
    profiles:
      - monitoring

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data: 